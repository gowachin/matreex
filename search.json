[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 maxime jaunatre Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"/articles/Harvesting.html","id":"define-a-species","dir":"Articles","previous_headings":"Simulations input","what":"Define a species","title":"Harvesting models","text":"first step IPM integration. part common basic usage package, nothing important . Please keep mind computation intensive may take minutes ! Harvesting scenario defined different levels: species level species harvesting function associated parameters, forest level set parameters, simulation level target harvesting scenario. Depending scenario used, parameters used. table summarise required parameters scenario. scenario example following document. Short example : using Uneven scenario, species needs use Uneven_harv() function harv_lim parameters. forest need harv_rules parameters. sim_deter_forest() require targetBA argument. targetRDI defined, used.","code":"library(matreex) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(ggplot2)  # Load fitted model for a species # fit_species # list of all species in dataset data(\"fit_Picea_abies\")  # Load associated climate data(\"climate_species\") climate <- subset(climate_species, N == 2 & sp == \"Picea_abies\", select = -sp) # see ?climate_species to understand the filtering of N. climate #>        sgdd       wai        sgddb      waib      wai2   sgdd2      PC1 #> 62 1444.667 0.4519387 0.0006922012 0.6887343 0.2042486 2087062 1.671498 #>           PC2 N       SDM #> 62 0.02602064 2 0.6760556  Picea_ipm <- make_IPM(     species = \"Picea_abies\",      climate = climate,      fit = fit_Picea_abies,     clim_lab = \"optimum clim\",      mesh = c(m = 700, L = 90, U = get_maxdbh(fit_Picea_abies) * 1.1),     BA = 0:70, # Default values are 0:200, smaller values speed up this vignette.     verbose = TRUE ) #> Launching integration loop #> GL integration occur on 32 cells #> midbin integration occur on 25 cells #> Loop done. #> Time difference of 1.1 mins"},{"path":[]},{"path":"/articles/Harvesting.html","id":"presentation","dir":"Articles","previous_headings":"Default scenario","what":"Presentation","title":"Harvesting models","text":"default scenario based Kunstler et al. (2021). mean constant harvest rate triggered year. harvest rate uniform size distribution. scenario used default. rate coded def_harv() function shown frequency (year) given harv_rules[\"freq\"]. Note harvesting applied size class except age-classes used delay (* (ct > 0)). scenario, simulation can launched without additional parameter. simulation done, can extract basal area number individual step simulation, also new variable \\(H\\). sum density harvested trees time step. density harvested trees also exported size mesh \\(h_i\\). case, \\(H\\) correlated \\(N\\) since ’s constant percentage linked size distribution. first step initialization step, ’s normal harvest.","code":"def_harv #> function (x, species, ...)  #> { #>     dots <- list(...) #>     ct <- dots$ct #>     rate <- 0.006 * (ct > 0) #>     return(x * rate) #> } #> <bytecode: 0x556dbb8375b8> #> <environment: namespace:matreex> Picea_sp <- species(IPM = Picea_ipm, init_pop = def_initBA(30)) Picea_for <- forest(species = list(Picea = Picea_sp),                      harv_rules = c(Pmax = 0.25, dBAmin = 3,                                     freq = 1, alpha = 1)) set.seed(42) # The seed is here to replicate the random population initialisation. Picea_sim <- sim_deter_forest(     Picea_for,     tlim = 200,     equil_time = 200, equil_dist = 10, equil_diff = 1,     harvest = \"default\", # this is the default value but we write it.     SurfEch = 0.03,     verbose = TRUE ) #> Starting while loop. Maximum t = 200 #> Simulation ended after time 200 #> BA stabilized at 43.98 with diff of 1.16 at time 200 #> Time difference of 2.07 secs Picea_sim  %>%     dplyr::filter(var %in% c(\"BAsp\", \"N\", \"H\"), ! equil) %>%     ggplot(aes(x = time, y = value)) +     facet_wrap(~ var, scales = \"free_y\") +     geom_line(linewidth = .2) + geom_point(size = 0.4)"},{"path":"/articles/Harvesting.html","id":"modulation","dir":"Articles","previous_headings":"Default scenario","what":"Modulation","title":"Harvesting models","text":"section just illustrate variation default scenario. First modify frequency harvest. harvest triggered, value returned 0.  advanced modification harvest function ilustratted . Obviously, type modification thoroughly tested thus prone error don’t hesitate contact {matreex} maintainer case trouble. example, add function multiply constant rate mesh, meaning larger tree get, higher harvesting rate size class.","code":"set.seed(42) # The seed is here for initial population random functions. Picea_sim_f20 <- sim_deter_forest(     forest(species = list(Picea = Picea_sp),                        harv_rules = c(Pmax = 0.25, dBAmin = 3,                                       freq = 20, alpha = 1)),     tlim = 50,     equil_time = 50, equil_dist = 10, equil_diff = 1,     harvest = \"default\",      SurfEch = 0.03,     verbose = TRUE ) #> Starting while loop. Maximum t = 50 #> Simulation ended after time 50 #> BA stabilized at 32.85 with diff of 0.78 at time 50 #> Time difference of 0.386 secs Picea_sim_f20  %>%     dplyr::filter(var %in% c(\"BAsp\", \"N\", \"H\"), ! equil) %>%     ggplot(aes(x = time, y = value)) +     facet_wrap(~ var, scales = \"free_y\") +     geom_line(linewidth = .2) + geom_point(size = 0.4) Picea_harv <- Picea_sp Picea_harv$harvest_fun <- function(x, species, ...){      dots <- list(...)     ct <- dots$ct      rate <- 6e-4 * (ct > 0) * species$IPM$mesh      return(x * rate) }  set.seed(42) # The seed is here for initial population random functions. Picea_sim_f20 <- sim_deter_forest(     forest(species = list(Picea = Picea_harv),                        harv_rules = c(Pmax = 0.25, dBAmin = 3,                                       freq = 20, alpha = 1)),     tlim = 250,     equil_time = 250, equil_dist = 10, equil_diff = 1,     harvest = \"default\",     SurfEch = 0.03,     verbose = TRUE ) #> Starting while loop. Maximum t = 250 #> Simulation ended after time 250 #> BA stabilized at 28.20 with diff of 5.02 at time 250 #> Time difference of 1.95 secs Picea_sim_f20  %>%     dplyr::filter(var %in% c(\"BAsp\", \"N\", \"H\"), ! equil) %>%     ggplot(aes(x = time, y = value)) +     facet_wrap(~ var, scales = \"free_y\") +     geom_line(linewidth = .2) + geom_point(size = 0.4)"},{"path":[]},{"path":"/articles/Harvesting.html","id":"theory","dir":"Articles","previous_headings":"Uneven scenario","what":"Theory","title":"Harvesting models","text":"Uneven-aged harvest scenario consist harvesting trees size classes objective reach stable size structure continuous replacing large mature trees. scenario depends basal area stand size distribution tree. lead stands uneven size distribution.","code":""},{"path":[]},{"path":"/articles/Harvesting.html","id":"harvest-proportion","dir":"Articles","previous_headings":"Uneven scenario > Theory > Monospecific case","what":"Harvest proportion","title":"Harvesting models","text":"note \\(P_{cut}\\) global harvest proportion determine amount basal area cut harvested. \\[ P_{cut} = \\left\\lbrace \\begin{array}{ll}     0 & (BA_{stand} - BA_{target}) < \\Delta BA_{min}\\\\     min(\\frac{BA_{stand}-BA_{target}}{BA_{stand}}, P_{max}) & (BA_{stand} - BA_{target}) \\geq \\Delta BA_{min} \\end{array} \\right\\rbrace \\] example, numerical values parameters can \\(\\Delta BA_{min} = 3 m^2ha^{-1}\\), \\(BA_{target} = 20, 25\\) \\(30 m^2ha^{-1}\\) (depending species) \\(P_{max} = 0.25\\). Note stand basal area \\(BA_{stand}\\) computed considering trees dbh \\(d_{th}\\) (see ).","code":""},{"path":"/articles/Harvesting.html","id":"harvest-curve","dir":"Articles","previous_headings":"Uneven scenario > Theory > Monospecific case","what":"Harvest curve","title":"Harvesting models","text":"tree harvest probability depends diameter (\\(d\\)). minimum diameter harvest (\\(d_{th}\\)), harvest probability increases diameter \\(d_{ha}\\) harvest probability constant. therefore considered harvesting function (associates dbh harvesting probability) \\[ h(d) = \\left\\lbrace \\begin{array}{ll}     0 & \\text{} d < d_{th} \\\\     h_{max} (\\frac{d - d_{th}}{d_{ha} - d_{th}})^{k} & \\text{} d_{th}\\leq d < d_{ha} \\\\     h_{max} & \\text{} d \\geq d_{ha} \\end{array} \\right\\rbrace \\] maximum harvesting large tree \\(h_{max}\\) can tuned probability large tree harvested approaches 1 several harvesting operations: \\(h_{max} = 1 - \\sqrt[n]{1-p}\\) \\(n\\) number harvesting operations. Parameter \\(k\\) defines quickly harvesting rate increase \\(d_{th}\\) \\(d_{ha}\\). Harvest curve example, \\(d_{th} = 17.5cm\\), \\(d_{ha}=57.5cm\\), \\(h_{max}=0.8\\), \\(k=2\\).","code":""},{"path":"/articles/Harvesting.html","id":"harvesting-algorithm","dir":"Articles","previous_headings":"Uneven scenario > Theory > Monospecific case","what":"Harvesting algorithm","title":"Harvesting models","text":"algorithm target tree contributing \\(BA_{stand}\\), trees \\(d_{th}\\) Given \\(\\phi(x)\\) density function diameters, basal area harvested \\[ BA_{harv} = BA_{th} + BA_{ha} \\] \\[ BA_{ha} =  h_{max} \\pi/4\\int_{d_{ha}}^{d_{max}}x^2 \\phi(x)dx \\] \\(\\bullet\\) \\(BA_{ha} >= P_{cut} \\times BA_{stand}\\), enough large trees (diameter \\(d_{ha}\\)) harvest concern large trees \\(BA_{th} = 0\\). find \\(d_t\\) (\\(d_{ha} < d_t < d_{max}\\)) : \\[  BA_{ha} = h_{max} \\pi/4 \\int_{d_{t}}^{d_{max}}x^2 \\phi(x)dx = P_{cut} \\times BA_{stand}\\] Thus, {matreex} package cut larger trees \\(P_{cut} \\times BA_{ha} - targetBA <= 0\\). \\(\\bullet\\) \\(BA_{ha} < P_{cut} \\times BA_{stand}\\), first harvest \\(BA_{ha}\\) compute \\(k\\) : \\(BA_{th} = P_{cut} \\times BA_{stand} - BA_{ha}\\). Note ","code":""},{"path":"/articles/Harvesting.html","id":"multispecific-case","dir":"Articles","previous_headings":"Uneven scenario > Theory","what":"Multispecific case","title":"Harvesting models","text":"monospecific case, define global harvest rate \\(P_{cut} = \\frac{BA_{harv}}{BA_{stand}}\\). , \\(BA_{stand}\\) divided \\(s\\) species: \\(BA_{stand} = \\sum_{=1}^{s} BA_{stand, }\\) \\(BA_{harv} = \\sum_{=1}^{s} BA_{harv, }\\) note \\(p_i = \\frac{BA_{stand, }}{BA_{stand}}\\) \\(P_{cut, } = \\frac{BA_{stand, } - BA_{harv, }}{BA_{stand, }} = f(p_i) * P_{cut}\\) suppose harvesting rate increases abundance (harvest preferentially trees highest proportion), means \\(f\\) increasing function. definition, \\[ \\begin{array}{ll} BA_{harv} & = \\sum_{=1}^{s} BA_{harv, } = \\sum_{=1}^{s} BA_{stand, } * (1 - P_{cut, }) \\\\           & = BA_{stand} \\sum_{=1}^{s} p_i * (1 - f(P_i) P_{cut}) \\\\       & = BA_{stand} (1 - P_{cut}) \\\\ \\end{array} \\] constraint \\(f\\): \\(\\sum_{=1}^{s} p_i (1-f(p_i)P_{cut}) = 1 - P_{cut} \\sum_{=1}^{s} p_i f(p_i) = 1-P_{cut}\\) equivalent \\(\\sum_{=1}^{s} p_i f(p_i) = 1\\) case \\(f(p_i) = 1\\) works, leads \\(P_{cut,} = P_{cut}\\). case harvest rate every species \\(\\). broadly, can use function \\[f(p_i) = \\frac{p_i^{\\alpha - 1}}{\\sum_{=1}^{s} p_i ^{\\alpha}}\\], \\(\\forall \\alpha > 0\\) \\(\\alpha = 2\\), example \\[f(p_i) =\\frac{p_i}{\\sum_{=1}^{s} p_i ^2} \\] sum , \\(\\alpha = 1\\), abundant species harvested, effort reach equi-abundance species. \\(\\alpha < 1\\), abundant species less harvested. Finally, \\(\\alpha > 1\\) abundant species harvested , greater proportion 1.","code":""},{"path":"/articles/Harvesting.html","id":"examples","dir":"Articles","previous_headings":"Uneven scenario","what":"Examples","title":"Harvesting models","text":"parameters described input either species(), forest() sim_deter_forest() functions. Additional parameter dBAmin difference BA targetBA harvesting triggered. plooting result, keep mind difference BAsp BAstand. second one match targetBA, since uneven harvesting, trees dth excluded computations.  notice basal area obtained simulation higher targeted one. can explained fact cutting calculation done \\(BA_{stand}\\), take account individuals smaller \\(d_{th}\\).","code":"Picea_Uneven <- species(IPM = Picea_ipm, init_pop = def_initBA(30),                          harvest_fun = Uneven_harv,                         harv_lim = c(dth = 175, dha = 575, hmax = 1)) Picea_for_Uneven <- forest(species = list(Picea = Picea_Uneven),                        harv_rules = c(Pmax = 0.25, dBAmin = 3,                                       freq = 5, alpha = 1)) set.seed(42) # The seed is here for initial population random functions. Picea_sim_f20 <- sim_deter_forest(     Picea_for_Uneven,     tlim = 260,     equil_time = 260, equil_dist = 10, equil_diff = 1,     harvest = \"Uneven\", targetBA = 20, # We change the harvest and set targetBA.     SurfEch = 0.03,     verbose = TRUE ) #> Starting while loop. Maximum t = 260 #> Simulation ended after time 260 #> BA stabilized at 22.55 with diff of 2.89 at time 260 #> Time difference of 2.11 secs Picea_sim_f20  %>%     dplyr::filter(var %in% c(\"BAsp\", \"BAstand\", \"N\"), ! equil) %>%     ggplot(aes(x = time, y = value)) +     facet_wrap(~ var, scales = \"free_y\") +     geom_line(linewidth = .2) + geom_point(size = 0.4)"},{"path":"/articles/Harvesting.html","id":"even-scenario","dir":"Articles","previous_headings":"","what":"Even scenario","title":"Harvesting models","text":"objective even harvesting grow trees age reach self-thinning boundary cut stage. self-thinning boundary given species following : \\[N_{max} = e^{intercept+slope \\cdot log(Dg)}\\] species parameters given Aussenac et al. (2021) inside package rdi_coef table. \\(Dg\\) mean quadratic diameter trees. , can compute density index \\(DI = N / N_{max}\\) \\(N\\) number stems. growth process, trees mean quadratic diameter \\(Dg\\) cut. magnitude cut given \\(Kg\\), ratio mean quadratic diameter killed trees \\(Dg_d\\) mean quadratic diameter \\(Dg\\) : \\[Kg = Dg^2_d / Dg^2\\] algorithm present Even_harv triggered \\(DI > targetRDI\\) optimise two parameters \\(h_{max}\\) \\(k\\) cut probability curve reach \\(targetKg\\) \\(targetRDI\\). \\[Pcut_i = hmax * ^{-k}\\] Harvest curve example various combination hmax k last parameter even harvested simulation final cut time. stand harvested previous rules given frequency certain point, manager harvest trees plant new ones. time dependant species growth differents targets. value named final_harv sim_deter_forest() function. rdi coefficient depends species, ’s possible use multiple species forest {matreex} package. Please contact authors need use mutlispecific even harvesting.","code":"data(rdi_coef) rdi_coef <- drop(as.matrix(     rdi_coef[rdi_coef$species == \"Picea_abies\",c(\"intercept\", \"slope\")] )) rdi_coef #> intercept     slope  #> 12.875790 -1.762061"},{"path":"/articles/Harvesting.html","id":"examples-1","dir":"Articles","previous_headings":"Even scenario","what":"Examples","title":"Harvesting models","text":"rdi parameters input species() function. Calling forest() function different, frequency harvest used. different targets targetKg, targetRDI final_harv values set launching simulation.","code":"Picea_Even <- species(     IPM = Picea_ipm, init_pop = def_init_even,     harvest_fun = Even_harv, rdi_coef = rdi_coef,     harv_lim = c(dth = 175, dha = 575, hmax = 1) )  Picea_for_Even <- forest(species = list(Picea = Picea_Even),                       harv_rules = c(Pmax = 0.25, dBAmin = 3,                                      freq = 5, alpha = 1)) set.seed(42) # The seed is here for initial population random functions. Picea_sim_f20 <- sim_deter_forest(     Picea_for_Even,     tlim = 100,     equil_time = 100, equil_dist = 10, equil_diff = 1,     harvest = \"Even\", targetRDI = 0.9, targetKg = 0.6,     final_harv = 80,     SurfEch = 0.03,     verbose = TRUE ) #> Starting while loop. Maximum t = 100 #> Simulation ended after time 100 #> BA stabilized at 4.20 with diff of 2.36 at time 100 #> Time difference of 0.785 secs Picea_sim_f20  %>%     dplyr::filter(var %in% c(\"BAsp\", \"N\", \"H\"), ! equil) %>%     ggplot(aes(x = time, y = value)) +     facet_wrap(~ var, scales = \"free_y\") +     geom_line(linewidth = .2) + geom_point(size = 0.4)"},{"path":[]},{"path":"/articles/matreex.html","id":"rapid-description-of-the-integral-projection-model","dir":"Articles","previous_headings":"","what":"Rapid description of the Integral Projection Model","title":"Basic functions and examples","text":"Details fitting integration IPM model can found Ellner, Childs, Rees (2016). Briefly, IPM predicts size distribution, \\(n(z', t+1)\\), population time t+1 size distribution time t, \\(n(z, t)\\), \\(z\\) size t \\(z'\\) size \\(t + 1\\), based following equation (Ellner, Childs, Rees (2016)): \\[ n(z', t+1) = \\int_{L}^{U} K(z', z) n(z, t) dz \\] \\(L\\) \\(U\\) , respectively, lower upper observed sizes integration kernel \\(K\\). kernel \\(K(z' ,z)\\) can split survival growth kernel \\(P(z' ,z)\\) fecundity kernel \\(F(z', z)\\), follows : \\(K(z' ,z) = P(z' ,z) + F(z' ,z)\\) . fecundity kernel \\(F(z', z)\\) gives size distribution newly recruited trees time \\(t+1\\) function size distribution time t. survival growth kernel \\(P(z', z)\\) defined \\(P(z', z) = s(z) \\times G(z', z)\\), \\(s\\) survival function \\(G\\) growth function. kernel \\(K(z' ,z)\\), thus, integrate three key vital rates functions: growth, survival, recruitment. kernel \\(P\\) numerically approximated big iteration matrix continuous size distribution \\(n\\) approximated big state vector. dimension width size class selected ensure good numerical integration kernel \\(P\\). Details numerical integration given Kunstler et al. (2021) Guyennon et al. (2023) .  Note, package cover statistical fitting vital rates functions.","code":""},{"path":[]},{"path":"/articles/matreex.html","id":"define-a-species","dir":"Articles","previous_headings":"Simulations input","what":"Define a species","title":"Basic functions and examples","text":"simulating forest, need first define tree species R. Species regroups basic vital rates functions: growth, recruitment survival. package, provide fitted vital rates functions used Kunstler et al. (2021) Guyennon et al. (2023) . functions depend tree size, local competition based sum basal area competitors, two climatic variables. climatic variables sum sum growing degree days sgdd, water aridity index wai (see Kunstler et al. (2021) details). Kunstler et al. (2021) Guyennon et al. (2023) used resampling procedure estimate vital rates functions resulting 100 resampled estimate parameters functions, simplify simulations provide averaged parameters 100 resamples. however, theory, possible run simulations vital rates functions provided glm objects (please contact authors test new variables). build IPM species start fitted function Kunstler et al. (2021) Guyennon et al. (2023) . numerical integration \\(P\\), need define mesh dimension, \\(700\\), lower \\(L\\) upper limits \\(U\\), respectively 90mm get_maxdbh(fit_Picea_abies) * 1.1 = 1204.5mm, range value competition index BA (0 60 \\(m^2/ha\\)). values used Kunstler et al. (2021) Guyennon et al. (2023) optimized provide good numerical integration. Please keep mind computation intensive may take minutes! IPM integrated BA range, can use build species object. R, species list object constructed species() function. addition IPM kernel \\(P\\), list require functions work simulations : init_pop : Function draw initial size distribution. default one draw distribution basal area (later named BA) 1 \\(m^2/ha\\) random functions (see help function details). package provide functions draw random distribution selected BA (def_initBA()) given distribution (def_init_k()). harvest_fun : Function cut tree given size distribution. default function cut 0.6% per year trees regardless size. functions allow harvest according Uneven Even rules (see Harvesting Vignette). disturb_fun : Function return tree mortality disturbance. default disturbance. species also comes parameters, used harvest disturbance modules. example, just modify initial size distribution start basal area 30 \\(m^2/ha\\).","code":"library(matreex) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(ggplot2)  # Load fitted model for a species # fit_species # list of all species in dataset data(\"fit_Picea_abies\")  # Load associated climate data(\"climate_species\") climate <- subset(climate_species, N == 2 & sp == \"Picea_abies\", select = -sp) # N here is a climate defined in Kunstler et al 2021.  # N == 2 is the optimum climate for the species.  # see ?climate_species for more info. climate #>        sgdd       wai        sgddb      waib      wai2   sgdd2      PC1 #> 62 1444.667 0.4519387 0.0006922012 0.6887343 0.2042486 2087062 1.671498 #>           PC2 N       SDM #> 62 0.02602064 2 0.6760556  Picea_ipm <- make_IPM(     species = \"Picea_abies\",      climate = climate,      fit = fit_Picea_abies,     clim_lab = \"optimum clim\",      mesh = c(m = 700, L = 90, U = get_maxdbh(fit_Picea_abies) * 1.1),     BA = 0:60, # Default values are 0:200, smaller values speed up this vignette.     verbose = TRUE ) #> Launching integration loop #> GL integration occur on 32 cells #> midbin integration occur on 25 cells #> Loop done. #> Time difference of 56 secs Picea_sp <- species(IPM = Picea_ipm, init_pop = def_initBA(30))"},{"path":"/articles/matreex.html","id":"define-a-forest","dir":"Articles","previous_headings":"Simulations input","what":"Define a forest","title":"Basic functions and examples","text":"species objects built, can assemble forest object. function also require additional parameters, used harvest disturbance modules.","code":"Picea_for <- forest(species = list(Picea = Picea_sp))"},{"path":"/articles/matreex.html","id":"running-simulations","dir":"Articles","previous_headings":"","what":"Running simulations","title":"Basic functions and examples","text":"simulations project forward size-structured population initial state matrix kernel \\(P\\) recruitment function. function requires length simulation time limit search equilibrium. simulation run time limit reached can continue equilibrium reached. Another parameter simulated surface SurfEch, ’s define surface studied forest. parameter mainly historical purpose models fitted \\(300m^2\\) plot, output scaled one hectare. code , simulate 200 years (tlim) years past time continue simulation till reach equilibrium 300 years (see figure ). tlim, simulation continue population reach equilibrium maximum 300 year (equil_time) . criteria reaching equilibrium (green) based computing range variation BA moving window length equil_dist since current step (grey). equilibrium reached range variation within moving window less equil_diff. equilibrium reached first timestep basal area range lower equil_diff. steps tlim t_equil recorded. search equilibrium start tlim last equil_dist steps (see figure B). equil_dist must higher tlim. want register full dynamic, can set tlim = equil_time (see figure C). equilibrium always last size distribution (shown green figure). Note case, final distribution returned result twice. equil_dist equil_diff parameters important case.  Keep mind despite high tlim equil_time values, equilibrium may reached end simulation. currently way algorithm report user. best way detect “false equilibrium” last step takes place t == equil_time plotting basal area along time. cases illustrated figure D E. Also, equilibrium computed total basal area, distribution can change. welcome suggestions may regarding equilibrium definition.  output simulation data.frame long format (according tidyverse style). helpful filter output plot ggplot2. Variables exported basal area per species BAsp, n hthe number alive harvested individuals per mesh, N H total number alive harvested individuals forest (per hectar).  size distributions needs extracted, can easily done dplyr functions. equilibrium step associated logical variable extract .","code":"set.seed(42) # The seed is here for initial population random functions. Picea_sim <- sim_deter_forest(     Picea_for,      tlim = 200,      equil_time = 300, equil_dist = 50, equil_diff = 1,     SurfEch = 0.03,     verbose = TRUE ) #> Starting while loop. Maximum t = 300 #> Simulation ended after time 263 #> BA stabilized at 45.43 with diff of 0.94 at time 263 #> Time difference of 2.07 secs Picea_sim  %>%     dplyr::filter(var == \"BAsp\", ! equil) %>%     ggplot(aes(x = time, y = value)) +     geom_line(linewidth = .4) + ylab(\"BA\") head(Picea_sim) #> # A tibble: 6 × 7 #>   species     var    time  mesh  size equil value #>   <chr>       <chr> <dbl> <dbl> <dbl> <lgl> <dbl> #> 1 Picea_abies n         1     1     0 FALSE  0    #> 2 Picea_abies n         2     1     0 FALSE  2.19 #> 3 Picea_abies n         3     1     0 FALSE  2.18 #> 4 Picea_abies n         4     1     0 FALSE  2.21 #> 5 Picea_abies n         5     1     0 FALSE  2.26 #> 6 Picea_abies n         6     1     0 FALSE  2.28  # get the maximum time max_t <- max(Picea_sim$time)  # Filter example to extract the size distribution Picea_sim %>%      dplyr::filter(grepl(\"m\", var), time == max_t) %>%      dplyr::select(size, value) #> # A tibble: 0 × 2 #> # ℹ 2 variables: size <dbl>, value <dbl>"},{"path":"/articles/matreex.html","id":"customizing-the-simulations","dir":"Articles","previous_headings":"","what":"Customizing the simulations","title":"Basic functions and examples","text":"simulation one simplest can produce package. chapter describe basic customization can add running simulation.","code":""},{"path":"/articles/matreex.html","id":"initialisation-step","dir":"Articles","previous_headings":"Customizing the simulations","what":"Initialisation step","title":"Basic functions and examples","text":"default, initialization population run random process draw size distribution species. already show function (def_initBA()) scale distribution given basal area. However, basal area value, multiple distribution possible. control exact distribution start, use def_init_k(). choice starting distribution can used reproduce simulations, starting equilibrium post disturbance state. example start \\(t = 150\\) previous simulation. illustrate despite simulation said reached equilibrium time \\(t =\\) 263, parameters introduced failed identify true equilibrium. previous equilibrium highlighted blue rectangle.","code":"# extract distribution distrib_t150 <- Picea_sim %>%      dplyr::filter(var == \"n\", time == 150) %>%     dplyr::pull(value)  Picea_sp$init_pop <- def_init_k(distrib_t150)  Picea_sim_k <- sim_deter_forest(     forest(species = list(Picea = Picea_sp)),      tlim = 200,      equil_time = 300, equil_dist = 50,     SurfEch = 0.03,     verbose = TRUE ) #> Starting while loop. Maximum t = 300 #> Simulation ended after time 300 #> BA stabilized at 30.32 with diff of 1.25 at time 300 #> Time difference of 2.55 secs  Picea_sim_k  %>%     dplyr::filter(var == \"BAsp\", ! equil) %>%     # below, we keep the time reference of the previous simulation      # to simplify the understanding of the full document.     dplyr::mutate(time = time + 150) %>%      ggplot(aes(x = time, y = value)) +     geom_line(linewidth = .4) + ylab(\"BA\") +     geom_rect(mapping = aes(xmin = prev_equil - 50, xmax = prev_equil,                                       ymin = max(value-1), ymax = max(value)),                        alpha = 0.002, fill = \"blue\") +     geom_text(aes(label = \"False equilibrium\",                    x = prev_equil - 25, y = max(value) - 3), size = 4)"},{"path":"/articles/matreex.html","id":"recruitment-delay","dir":"Articles","previous_headings":"Customizing the simulations","what":"Recruitment delay","title":"Basic functions and examples","text":"New trees recruited \\(L\\) (90mm). Trees takes however several years grow seed minimum size \\(L\\). represents time lag tree recruit \\(L\\), can modify species adding delay recruitment new individuals. default, recruitment given number new individuals. number split half adds first two class size distribution. Adding delay expand IPM n_delay age based classes represent year takes (5 years) grow \\(L\\). new recruit age one age class another enter size-based IPM. default delay used build_IPM() species. values computed regressions. simulation run way delay defined IPM level. Equilibrium BA really close without delay (\\(\\Delta_{BA} < 1\\)). N expected increase delay since delayed mesh cell seeds counted .","code":"n_delay <- 5 Picea_sp_d5 <- delay(Picea_sp, n_delay) Picea_sp_d5$info[\"species\"] <- \"Picea_delayed\" # We rename the species for easier plot. Picea_sp_d5$init_pop <- def_initBA(30) set.seed(42) Picea_sim_d5 <- sim_deter_forest(     forest(species = list(Picea = Picea_sp_d5)),     tlim = 200,      equil_time = 200, equil_dist = 50,     SurfEch = 0.03,     verbose = TRUE ) #> Starting while loop. Maximum t = 200 #> Simulation ended after time 200 #> BA stabilized at 43.85 with diff of 10.04 at time 200 #> Time difference of 1.56 secs Picea_sim_d5 %>%     rbind(Picea_sim) %>%     dplyr::filter(var %in% c(\"BAsp\", \"N\"), !equil) %>%     ggplot(aes(x = time, y = value, color = species)) +     geom_line(linetype = \"dashed\", linewidth = .3) +     geom_point(size = .7) + ylab(\"BA\") +     facet_wrap(~ var, scales = \"free_y\") +     NULL"},{"path":"/articles/matreex.html","id":"multiple-species","dir":"Articles","previous_headings":"Customizing the simulations","what":"Multiple species","title":"Basic functions and examples","text":"Multi-specific simulations performed like simulations previously illustrated. difference construction forest object. explain species argument forest() function require list input. need modelise second species. careful select climate first species.  important point note multiple species equilibrium defined forest level, sum species basal area.","code":"data(\"fit_Abies_alba\")  Abies_ipm <- make_IPM(     species = \"Abies_alba\",      climate = climate, # this variable is defined at the top of the doc.     fit = fit_Abies_alba,     clim_lab = \"optimum clim\",     mesh = c(m = 700, L = 90, U = get_maxdbh(fit_Abies_alba) * 1.1),     BA = 0:60, # Default values are 0:200, smaller values speed up this vignette.     verbose = TRUE ) #> Launching integration loop #> GL integration occur on 24 cells #> midbin integration occur on 25 cells #> Loop done. #> Time difference of 37.4 secs Abies_sp <- species(IPM = Abies_ipm, init_pop = def_initBA(35)) # We edit back the init_fun for Picea Picea_sp$init_pop <- def_initBA(15) Picea_Abies_for <- forest(species = list(Picea = Picea_sp, Abies = Abies_sp))  set.seed(42) Picea_Abies_sim <- sim_deter_forest(     Picea_Abies_for,      tlim = 500,      equil_time = 500, equil_dist = 50,     SurfEch = 0.03,     verbose = TRUE ) #> Starting while loop. Maximum t = 500 #> time 500 | BA diff : 0.54 #> Simulation ended after time 500 #> BA stabilized at 50.15 with diff of 0.54 at time 500 #> Time difference of 6.79 secs  Picea_Abies_sim  %>%     dplyr::filter(var == \"BAsp\", ! equil) %>%     ggplot(aes(x = time, y = value, color = species)) +     geom_line(linewidth = .4) + ylab(\"BA\") +     stat_summary(fun = \"sum\",  aes(col=\"Total\"),                  geom ='line', linetype = \"dashed\", linewidth = .3)"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anne Baranger. Author. Julien Barrere. Author. Thomas Cordonnier. Author. Arnaud Guyennon. Author. Maxime Jaunatre. Author, maintainer, translator. Valentin Journe. Author. Georges Kunstler. Author. Bjoern Reineking. Author. Laura Touzot. Author. INRAE. Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Baranger , Barrere J, Cordonnier T, Guyennon , Jaunatre M, Journe V, Kunstler G, Reineking B, Touzot L (2023). matreex: LESSEM internal package simulation forest dynamic depending climatic variables. R package version 0.3.0.","code":"@Manual{,   title = {matreex: LESSEM internal package for simulation of forest dynamic depending on climatic variables},   author = {Anne Baranger and Julien Barrere and Thomas Cordonnier and Arnaud Guyennon and Maxime Jaunatre and Valentin Journe and Georges Kunstler and Bjoern Reineking and Laura Touzot},   year = {2023},   note = {R package version 0.3.0}, }"},{"path":"/index.html","id":"matreex-","dir":"","previous_headings":"","what":"LESSEM internal package for simulation of forest dynamic depending\n    on climatic variables","title":"LESSEM internal package for simulation of forest dynamic depending\n    on climatic variables","text":"goal package run integrated projection models tree species single multi-specific density dependence context. simulations return size distribution dynamics along time. models can completed different harvest disturbance models runned untile equilibrium. Main methods developped Kunstler et al (2020) Guyennon et al 2023 well european treee species growth/survival/recruitment models.","code":""},{"path":[]},{"path":"/index.html","id":"dependencies","dir":"","previous_headings":"Installation","what":"Dependencies","title":"LESSEM internal package for simulation of forest dynamic depending\n    on climatic variables","text":"package relies packages listed , can install following code.","code":"deps <- c('checkmate', 'Matrix', 'here', 'dplyr',            'rlang', 'tidyr', 'purrr', 'cli',            'statmod') for (i in deps ){   if(!require(i,character.only = TRUE))     install.packages(i) }"},{"path":"/index.html","id":"stable-version","dir":"","previous_headings":"Installation","what":"Stable version","title":"LESSEM internal package for simulation of forest dynamic depending\n    on climatic variables","text":"can install {matreex} package gitlab : Github repository mirror gitlab. added github repo, code !","code":"# install.packages(\"remotes\") remotes::install_gitlab(\"gowachin/matreex\") # install.packages(\"remotes\") remotes::install_github(\"gowachin/matreex\")"},{"path":"/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development version","title":"LESSEM internal package for simulation of forest dynamic depending\n    on climatic variables","text":"can install development version {matreex} gitlab : install development version package, please check NEWS.md changelog regularly. package active development changes may break code !","code":"# install.packages(\"remotes\") remotes::install_gitlab(\"gowachin/matreex\", ref = \"dev\") # or # remotes::install_github(\"gowachin/matreex\", ref = \"dev\")"},{"path":"/index.html","id":"usage-guide","dir":"","previous_headings":"","what":"Usage Guide","title":"LESSEM internal package for simulation of forest dynamic depending\n    on climatic variables","text":"Getting started vignette now available run basic simulations {matreex} package. second vignette harvesting module also available.","code":""},{"path":"/index.html","id":"support","dir":"","previous_headings":"","what":"Support","title":"LESSEM internal package for simulation of forest dynamic depending\n    on climatic variables","text":"Issues centralized gitlab project..","code":""},{"path":"/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"LESSEM internal package for simulation of forest dynamic depending\n    on climatic variables","text":"Future dev listed github repository project keep tracks working . Link ","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"LESSEM internal package for simulation of forest dynamic depending\n    on climatic variables","text":"Project MIT Licence.","code":""},{"path":"/reference/Even_harv.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform the harvest Even — Even_harv","title":"Perform the harvest Even — Even_harv","text":"Perform harvest Even","code":""},{"path":"/reference/Even_harv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform the harvest Even — Even_harv","text":"","code":"Even_harv(x, species, ...)"},{"path":"/reference/Even_harv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform the harvest Even — Even_harv","text":"x population state distribution time t species species class object interest get mesh RDIcoef values . RDIcoef one line dataframe RDI coefficient one species. ... Variables used case Uneven harvest targetKg target Kg targetRDI target RDI ct vector compute BA x (ct = Buildct(mesh, SurfEch)) SurfEch Value plot size surface ha","code":""},{"path":[]},{"path":"/reference/QMD.html","id":null,"dir":"Reference","previous_headings":"","what":"get Quadratic Mean Diameter — QMD","title":"get Quadratic Mean Diameter — QMD","text":"Compute quadratic mean diameter given size distribution.","code":""},{"path":"/reference/QMD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get Quadratic Mean Diameter — QMD","text":"","code":"QMD(size, n)"},{"path":"/reference/QMD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get Quadratic Mean Diameter — QMD","text":"size Size class vector following distribution. dbl vector n population state distribution time t. dbl vector.","code":""},{"path":"/reference/QMD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get Quadratic Mean Diameter — QMD","text":"input share length.","code":""},{"path":"/reference/Uneven_harv.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform the harvest Uneven — Uneven_harv","title":"Perform the harvest Uneven — Uneven_harv","text":"Perform harvest Uneven","code":""},{"path":"/reference/Uneven_harv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform the harvest Uneven — Uneven_harv","text":"","code":"Uneven_harv(x, species, ...)"},{"path":"/reference/Uneven_harv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform the harvest Uneven — Uneven_harv","text":"x population state distribution time t species species class object interest get mesh harv_lim values . ... Variables used case Uneven harvest targetBAcut Basal Area cut. ct vector compute BA x (ct = Buildct(mesh, SurfEch))","code":""},{"path":[]},{"path":"/reference/climate_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Species climate optimum dataset. — climate_species","title":"Species climate optimum dataset. — climate_species","text":"Climate defined per species Kunstler et al. 2021. species IPM integrated 3 climates : 1 hot edge 2 optimum climate species 3 cold edge","code":""},{"path":"/reference/climate_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species climate optimum dataset. — climate_species","text":"","code":"climate_species"},{"path":"/reference/climate_species.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Species climate optimum dataset. — climate_species","text":"object class data.frame 81 rows 11 columns.","code":""},{"path":"/reference/climate_species.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Species climate optimum dataset. — climate_species","text":"https://doi.org/10.1111/1365-2745.13533","code":""},{"path":"/reference/climate_species.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Species climate optimum dataset. — climate_species","text":"Climate defined sgdd wai variables.","code":""},{"path":"/reference/climatic.html","id":null,"dir":"Reference","previous_headings":"","what":"Get climatic values in matreex class object — climatic","title":"Get climatic values in matreex class object — climatic","text":"Get climatic values matreex class object","code":""},{"path":"/reference/climatic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get climatic values in matreex class object — climatic","text":"","code":"climatic(x)"},{"path":"/reference/climatic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get climatic values in matreex class object — climatic","text":"x matreex class object. Used ipm species time.","code":""},{"path":"/reference/correction.html","id":null,"dir":"Reference","previous_headings":"","what":"Add correction states to a system — correction","title":"Add correction states to a system — correction","text":"Apply correction matrix setting 0 right bottom values","code":""},{"path":"/reference/correction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add correction states to a system — correction","text":"","code":"correction(x, correction = \"none\")"},{"path":"/reference/correction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add correction states to a system — correction","text":"x object require correction addition correction Type correction, match cut none (default). chr.","code":""},{"path":"/reference/def_disturb.html","id":null,"dir":"Reference","previous_headings":"","what":"Default disturbance function — def_disturb","title":"Default disturbance function — def_disturb","text":"Default disturbance function","code":""},{"path":"/reference/def_disturb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default disturbance function — def_disturb","text":"","code":"def_disturb(x, species, disturb = NULL, ...)"},{"path":"/reference/def_disturb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default disturbance function — def_disturb","text":"x population state distribution time t species species class object interest get mesh RDIcoef values . RDIcoef one line dataframe RDI coefficient one species. disturb Disturbance parameters. Highly depend disturbance impact parameters given species. ... Default disturbance function require","code":""},{"path":"/reference/def_harv.html","id":null,"dir":"Reference","previous_headings":"","what":"Default population harvest — def_harv","title":"Default population harvest — def_harv","text":"Constant rate harvest 0.06 percent per year (check harvest frequence 1 forest object).","code":""},{"path":"/reference/def_harv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default population harvest — def_harv","text":"","code":"def_harv(x, species, ...)"},{"path":"/reference/def_harv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default population harvest — def_harv","text":"x population state time t species ignored ... Variables used case Uneven harvest ct vector compute BA x (ct = Buildct(mesh, SurfEch))","code":""},{"path":"/reference/def_harv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default population harvest — def_harv","text":"Distribution population harvest. Values 0 (null harvest) Xi.","code":""},{"path":"/reference/def_harv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Default population harvest — def_harv","text":"function default function harvest_fun function species always takes arguments x, species plus specific argument different harvest models..","code":""},{"path":[]},{"path":"/reference/def_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Default population initialization — def_init","title":"Default population initialization — def_init","text":"population initiate random distribution match basal area 1.","code":""},{"path":"/reference/def_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default population initialization — def_init","text":"","code":"def_init(mesh, SurfEch = 0.03)"},{"path":"/reference/def_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default population initialization — def_init","text":"mesh possible states population, based IPM. Minimal maximal values respectively U L, total number m states. SurfEch Value plot size surface \\(m^2\\)","code":""},{"path":"/reference/def_init.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Default population initialization — def_init","text":"function default function init_pop function species always takes arguments mesh SurfEch.","code":""},{"path":[]},{"path":"/reference/def_initBA.html","id":null,"dir":"Reference","previous_headings":"","what":"Init population at BA — def_initBA","title":"Init population at BA — def_initBA","text":"function modify def_init function start given BA process random distribution.","code":""},{"path":"/reference/def_initBA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Init population at BA — def_initBA","text":"","code":"def_initBA(BA = 1, fun = c(\"def_init\", \"def_init_even\"))"},{"path":"/reference/def_initBA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Init population at BA — def_initBA","text":"BA Basal area targeted. single value must 0 can close (minimal accepted value 1e-10) fun Function modify, single chr choices.","code":""},{"path":"/reference/def_initBA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Init population at BA — def_initBA","text":"Function similar def_init","code":""},{"path":[]},{"path":"/reference/def_init_even.html","id":null,"dir":"Reference","previous_headings":"","what":"Default even population initialization — def_init_even","title":"Default even population initialization — def_init_even","text":"population initiate individual 5 first cells mesh.","code":""},{"path":"/reference/def_init_even.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default even population initialization — def_init_even","text":"","code":"def_init_even(mesh, SurfEch = 0.03)"},{"path":"/reference/def_init_even.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default even population initialization — def_init_even","text":"mesh possible states population, based IPM. Minimal maximal values respectively U L, total number m states. SurfEch Value plot size surface \\(m^2\\)","code":""},{"path":[]},{"path":"/reference/def_init_k.html","id":null,"dir":"Reference","previous_headings":"","what":"Init population with precise distribution — def_init_k","title":"Init population with precise distribution — def_init_k","text":"Init population precise distribution","code":""},{"path":"/reference/def_init_k.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Init population with precise distribution — def_init_k","text":"","code":"def_init_k(x)"},{"path":"/reference/def_init_k.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Init population with precise distribution — def_init_k","text":"x Distribution draw systematically. distribution composed values [0, Inf] values sum superior 0. distribution per hectare sampled plot.","code":""},{"path":"/reference/def_init_k.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Init population with precise distribution — def_init_k","text":"Function similar def_init random effect anymore.","code":""},{"path":"/reference/def_init_k.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Init population with precise distribution — def_init_k","text":"resulting function check provided vector length mesh.","code":""},{"path":[]},{"path":"/reference/delay.dgCMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Delay dgCMatrix — delay.dgCMatrix","title":"Delay dgCMatrix — delay.dgCMatrix","text":"Adding topleft corner matrix filled 0.","code":""},{"path":"/reference/delay.dgCMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delay dgCMatrix — delay.dgCMatrix","text":"","code":"# S3 method for dgCMatrix delay(x, delay = 0)"},{"path":"/reference/delay.dgCMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delay dgCMatrix — delay.dgCMatrix","text":"x object require delay addition delay number time delay add. single int. possible give negative values remove delay previously delayed objects. However final delay must positive (0 acceptable).","code":""},{"path":"/reference/delay.dgCMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delay dgCMatrix — delay.dgCMatrix","text":"","code":"x <- new(\"dtCMatrix\", i = c(0L, 1L, 2L, 1L, 2L, 2L), p = c(0L, 3L,  5L, 6L),          Dim = c(3L, 3L), x = c(0.1, 0.2, 0.3, 0.1, 0.2, 0.1), uplo = \"L\", diag = \"N\") x <- delay(x, 2) delay(x, -1) #> 4 x 4 sparse Matrix of class \"dtCMatrix\" #>                    #> [1,] . .   .   .   #> [2,] 1 0.1 .   .   #> [3,] . 0.2 0.1 .   #> [4,] . 0.3 0.2 0.1"},{"path":"/reference/delay.dtCMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Delay dtCMatrix — delay.dtCMatrix","title":"Delay dtCMatrix — delay.dtCMatrix","text":"Adding topleft corner matrix filled 0.","code":""},{"path":"/reference/delay.dtCMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delay dtCMatrix — delay.dtCMatrix","text":"","code":"# S3 method for dtCMatrix delay(x, delay = 0)"},{"path":"/reference/delay.dtCMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delay dtCMatrix — delay.dtCMatrix","text":"x object require delay addition delay number time delay add. single int. possible give negative values remove delay previously delayed objects. However final delay must positive (0 acceptable).","code":""},{"path":"/reference/delay.dtCMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delay dtCMatrix — delay.dtCMatrix","text":"","code":"x <- new(\"dtCMatrix\", i = c(0L, 1L, 2L, 1L, 2L, 2L), p = c(0L, 3L,  5L, 6L),          Dim = c(3L, 3L), x = c(0.1, 0.2, 0.3, 0.1, 0.2, 0.1), uplo = \"L\", diag = \"N\") x <- delay(x, 2) delay(x, -1) #> 4 x 4 sparse Matrix of class \"dtCMatrix\" #>                    #> [1,] . .   .   .   #> [2,] 1 0.1 .   .   #> [3,] . 0.2 0.1 .   #> [4,] . 0.3 0.2 0.1"},{"path":"/reference/delay.html","id":null,"dir":"Reference","previous_headings":"","what":"Add delay states to a system — delay","title":"Add delay states to a system — delay","text":"Add delay states existing pop_state class object ipm class object.","code":""},{"path":"/reference/delay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add delay states to a system — delay","text":"","code":"delay(x, delay = 0)"},{"path":"/reference/delay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add delay states to a system — delay","text":"x object require delay addition delay number time delay add. single int. possible give negative values remove delay previously delayed objects. However final delay must positive (0 acceptable).","code":""},{"path":"/reference/delay.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add delay states to a system — delay","text":"function method call delay.ipm internal function.","code":""},{"path":"/reference/dev_make_IPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Build IPM for a given species and climate — dev_make_IPM","title":"Build IPM for a given species and climate — dev_make_IPM","text":"Integrate IPM growth survival function specific climate species basal area variation.","code":""},{"path":"/reference/dev_make_IPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build IPM for a given species and climate — dev_make_IPM","text":"","code":"dev_make_IPM(   species,   climate,   clim_lab,   fit,   mesh = c(m = 700, L = 90, U = 1500),   BA = 0:100,   correction = c(\"constant\", \"none\", \"ceiling\", \"sizeExtremes\"),   level = c(3, 140),   diag_tresh = 50,   midbin_tresh = 25,   mid_level = 5,   year_delta = 1,   IsSurv = TRUE,   verbose = FALSE )"},{"path":"/reference/dev_make_IPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build IPM for a given species and climate — dev_make_IPM","text":"species species names registered object climate Named vector environmental variables used fitted model. data_plot_pred . clim_lab Label climatic used. values matched simulating multiple species together. fit Fitted model growth survival species climate given. Functions depend size basal area. mesh vector mesh variables. m number bins, L minimum size U maximum size. h defined function \\(h <- (U - L) / m\\). BA Vector basal area integrate . Integrating 0 important use . Integrating 200 absurd. correction Correction apply IPM matrix eviction. Choices none (default), constant, ceiling sizeExtremes. level Number point use integration cell Gauss-Legendre integration. value divided 3 since size t integrated level = 3 size t+1 level = level/3. single int (default 420). diag_tresh Threshold Gauss-Legendre integration, distance diagonal. Number cell integrated number cell size t+1 - size t inferior threshold. single dbl (default 50). midbin_tresh Number cells external GL integration integrate mid bin method. mid_level Number point use integration cell mid bin integration. year_delta Number year 2 obersavtion using model. default 1, single int. NOTE : value dev usage ! IsSurv Adding survival IPM. Set FALSE useful test eviction model. TRUE default. verbose Print message. FALSE default","code":""},{"path":"/reference/dev_make_IPM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build IPM for a given species and climate — dev_make_IPM","text":"check climate variables fitted variable assert variables model provided expect variables derived \"size\" (size, size2, logsize), \"intercept\" \"BATOTcomp\". error triggered climate variable missing. One can desactivate kind integration treshold values. negative value diag_tresh (ex: -1) cancel Gauss-Legendre integration midbin_tresh null value (ex: 0) cancel midbin integration. working function test faster integration.","code":""},{"path":"/reference/disturb_coef.html","id":null,"dir":"Reference","previous_headings":"","what":"Species disturbance parameters. — disturb_coef","title":"Species disturbance parameters. — disturb_coef","text":"Species disturbance parameters.","code":""},{"path":"/reference/disturb_coef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species disturbance parameters. — disturb_coef","text":"","code":"disturb_coef"},{"path":"/reference/disturb_coef.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Species disturbance parameters. — disturb_coef","text":"object class data.frame 64 rows 10 columns.","code":""},{"path":"/reference/disturb_coef.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Species disturbance parameters. — disturb_coef","text":"Computations Julien Barrere","code":""},{"path":"/reference/fit_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Species fited models dataset. — fit_data","title":"Species fited models dataset. — fit_data","text":"Reformated fitted models Kunstler et al. 2021. species fitted growth, survival recruitment along climatic conditions based sgdd wai. objects modified oldfit2fit function package.","code":""},{"path":"/reference/fit_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species fited models dataset. — fit_data","text":"","code":"fit_species  lag_species  fit_Abies_alba  fit_Acer_campestre  fit_Acer_pseudoplatanus  fit_Alnus_glutinosa  fit_Betula  fit_Carpinus_betulus  fit_Fagus_sylvatica  fit_Fraxinus_excelsior  fit_Juniperus_thurifera  fit_Larix_decidua  fit_Picea_abies  fit_Pinus_halepensis  fit_Pinus_nigra  fit_Pinus_pinaster  fit_Pinus_pinea  fit_Pinus_sylvestris  fit_Pinus_uncinata  fit_Populus_tremula  fit_Prunus_padus  fit_Quercus_faginea  fit_Quercus_ilex  fit_Quercus_petraea  fit_Quercus_pubescens  fit_Quercus_pyrenaica  fit_Quercus_robur  fit_Quercus_suber  fit_Salix_caprea"},{"path":"/reference/fit_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Species fited models dataset. — fit_data","text":"object class character length 27. object class numeric length 27. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4. object class fit_sgr length 4.","code":""},{"path":"/reference/fit_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Species fited models dataset. — fit_data","text":"https://doi.org/10.1111/1365-2745.13533","code":""},{"path":"/reference/fit_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Species fited models dataset. — fit_data","text":"fit_species dataset contains vector species stored package. lag_species dataset contains vector default delay species. lag computed Kunstler missing values Betula, Juniperus_thurifera, Prunus_padus, Quercus_faginea Quercus_pyrenaica set mean species. details given https://github.com/gowachin/matreex/issues/10","code":""},{"path":"/reference/fit_sgr.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new fitted models from — fit_sgr","title":"Create a new fitted models from — fit_sgr","text":"Species defined IPM transition matrix size t t+1, recruitment harvest functions. species items defined given climate. additionnal vector harvest parameers required minimal size harvest (dth), size wich harvest constant (dha).","code":""},{"path":"/reference/fit_sgr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new fitted models from — fit_sgr","text":"","code":"fit_sgr(   sv_params,   sv_family,   gr_params,   gr_sigma,   rec_params,   species,   max_dbh,   delay )"},{"path":"/reference/fit_sgr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new fitted models from — fit_sgr","text":"sv_params Named vector survival parameters fitted species climatic condition. Minimal parameters intercept size. sv_family Family list contain details models used fitting functions glm. inverse link function (linkinv) used model now. list. gr_params Named vector growth parameters fitted species climatic condition. Minimal parameters intercept size. gr_sigma Standard deviation residuals growth fitted model. rec_params Named vector growth parameters fitted species climatic condition. Minimal parameters intercept, BATOTSP BATOTNonSP. species Name species run simulation . Single char. max_dbh Maximum diameter fitted dataset. Single dbl. delay Delay species. Single dbl.","code":""},{"path":"/reference/forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new forest for simulation — forest","title":"Create a new forest for simulation — forest","text":"forest group one multiple species silumate along time using IPM defined species harvest rules.","code":""},{"path":"/reference/forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new forest for simulation — forest","text":"","code":"forest(   species = list(),   harv_rules = c(Pmax = 0.25, dBAmin = 3, freq = 1, alpha = 1) )"},{"path":"/reference/forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new forest for simulation — forest","text":"species List species created matreex package. harv_rules Vector harvest rules scale forest. Pmax maximum proportion BAcut / BA dBAmin minimum BA perform cut freq Frequence harvest executed.","code":""},{"path":"/reference/getRangemu.html","id":null,"dir":"Reference","previous_headings":"","what":"Get mu range for a species — getRangemu","title":"Get mu range for a species — getRangemu","text":"Get mu range species","code":""},{"path":"/reference/getRangemu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get mu range for a species — getRangemu","text":"","code":"getRangemu(climate, fit, BA = 0:200, mesh = seq(90, 900, by = 10))"},{"path":"/reference/getRangemu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get mu range for a species — getRangemu","text":"climate climate table species. fit Fitted model growth survival species climate given. Functions depend size basal area. BA Vector basal area integrate . Integrating 0 important use . Integrating 200 absurd. mesh vector mesh variables. m number bins, L minimum size U maximum size. h defined function \\(h <- (U - L) / m\\).","code":""},{"path":"/reference/get_maxdbh.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the max_dbh of a fitted species — get_maxdbh","title":"Get the max_dbh of a fitted species — get_maxdbh","text":"Get max_dbh fitted species","code":""},{"path":"/reference/get_maxdbh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the max_dbh of a fitted species — get_maxdbh","text":"","code":"get_maxdbh(x)"},{"path":"/reference/get_maxdbh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the max_dbh of a fitted species — get_maxdbh","text":"x matreex class object. Used fit_sgr now.","code":""},{"path":"/reference/get_step_IPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract an IPM matrix — get_step_IPM","title":"Extract an IPM matrix — get_step_IPM","text":"Extract IPM matrix needed simulation given BA optionally climate.","code":""},{"path":"/reference/get_step_IPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract an IPM matrix — get_step_IPM","text":"","code":"get_step_IPM(x, ...)"},{"path":"/reference/get_step_IPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract an IPM matrix — get_step_IPM","text":"x IPM mu_gr class object. ... Variables used depending class x. BA Total basal area get IPM simulation. climate Climate IPM needed. sim_corr Simulation correction applied IPM. \"cut\" \"none\" IsSurv step IPM require survival. missing NULL, value taken x$info object","code":""},{"path":"/reference/get_step_IPM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract an IPM matrix — get_step_IPM","text":"Methods set IPM objects mu_gr. second one require give climate simulation correction apply matrix.","code":""},{"path":"/reference/make_IPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Build IPM for a given species and climate — make_IPM","title":"Build IPM for a given species and climate — make_IPM","text":"Integrate IPM growth survival function specific climate species basal area variation.","code":""},{"path":"/reference/make_IPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build IPM for a given species and climate — make_IPM","text":"","code":"make_IPM(   species,   climate,   clim_lab,   fit,   mesh = c(m = 700, L = 90, U = 1500),   BA = 0:100,   correction = c(\"none\", \"constant\", \"ceiling\", \"sizeExtremes\"),   level = 420,   diag_tresh = 50,   midbin_tresh = 25,   mid_level = 5,   year_delta = 1,   IsSurv = TRUE,   delay = NULL,   verbose = FALSE )"},{"path":"/reference/make_IPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build IPM for a given species and climate — make_IPM","text":"species species names registered object climate Named vector environmental variables used fitted model. data_plot_pred . clim_lab Label climatic used. values matched simulating multiple species together. fit Fitted model growth survival species climate given. Functions depend size basal area. mesh vector mesh variables. m number bins, L minimum size U maximum size. h defined function \\(h <- (U - L) / m\\). BA Vector basal area integrate . Integrating 0 important use . Integrating 200 absurd. correction Correction apply IPM matrix eviction. Choices none (default), constant, ceiling sizeExtremes. level Number point use integration cell Gauss-Legendre integration. value divided 3 since size t integrated level = 3 size t+1 level = level/3. single int (default 420). diag_tresh Threshold Gauss-Legendre integration, distance diagonal. Number cell integrated number cell size t+1 - size t inferior threshold. single dbl (default 50). midbin_tresh Number cells external GL integration integrate mid bin method. mid_level Number point use integration cell mid bin integration. year_delta Number year 2 obersavtion using model. default 1, single int. NOTE : value dev usage ! IsSurv Adding survival IPM. Set FALSE useful test eviction model. TRUE default. delay number time delay add. default, use delay stored fit object provided, can provided. verbose Print message. FALSE default","code":""},{"path":"/reference/make_IPM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build IPM for a given species and climate — make_IPM","text":"check climate variables fitted variable assert variables model provided expect variables derived \"size\" (size, size2, logsize), \"intercept\" \"BATOTcomp\". error triggered climate variable missing. One can desactivate kind integration treshold values. negative value diag_tresh (ex: -1) cancel Gauss-Legendre integration midbin_tresh null value (ex: 0) cancel midbin integration.","code":""},{"path":"/reference/make_mu_gr.html","id":null,"dir":"Reference","previous_headings":"","what":"Build IPM for a given species and climate — make_mu_gr","title":"Build IPM for a given species and climate — make_mu_gr","text":"Integrate IPM growth survival function specific climate species basal area variation.","code":""},{"path":"/reference/make_mu_gr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build IPM for a given species and climate — make_mu_gr","text":"","code":"make_mu_gr(   species,   fit,   climate = NULL,   mesh = c(m = 700, L = 90, U = 1500),   BA = 0:200,   correction = c(\"none\", \"constant\", \"ceiling\", \"sizeExtremes\"),   stepMu = 0.001,   level = c(3, 140),   diag_tresh = 50,   midbin_tresh = 25,   mid_level = 5,   year_delta = 1,   IsSurv = TRUE,   verbose = FALSE )"},{"path":"/reference/make_mu_gr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build IPM for a given species and climate — make_mu_gr","text":"species species names registered object fit Fitted model growth survival species climate given. Functions depend size basal area. climate Climate table species. Optionnal species defined package. format climatic variable column different climate row. example package cliamte_species. mesh vector mesh variables. m number bins, L minimum size U maximum size. h defined function \\(h <- (U - L) / m\\). BA Vector basal area integrate . Integrating 0 important use . Integrating 200 absurd. correction Correction apply IPM matrix eviction. Choices constant (default), ceiling, sizeExtremes none. stepMu Step mu species range. value effect simulation. Default 1e-3. Values 1e-5 takes longer classical matrix integration. level Number point use integration cell Gauss-Legendre integration. value divided 3 since size t integrated level = 3 size t+1 level = level/3. single int (default 420). diag_tresh Threshold Gauss-Legendre integration, distance diagonal. Number cell integrated number cell size t+1 - size t inferior threshold. single dbl (default 50). midbin_tresh Number cells external GL integration integrate mid bin method. mid_level Number point use integration cell mid bin integration. year_delta Number year 2 obersavtion using model. default 1, single int. NOTE : value dev usage ! IsSurv Adding survival IPM. Set FALSE useful test eviction model. TRUE default. verbose Print message. FALSE defaul","code":""},{"path":"/reference/make_mu_gr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build IPM for a given species and climate — make_mu_gr","text":"check climate variables fitted variable assert variables model provided expect variables derived \"size\" (size, size2, logsize), \"intercept\" \"BATOTcomp\". error triggered climate variable missing. One can desactivate kind integration treshold values. negative value diag_tresh (ex: -1) cancel Gauss-Legendre integration midbin_tresh null value (ex: 0) cancel midbin integration. working function test faster integration integrate ba value","code":""},{"path":"/reference/matreex.html","id":null,"dir":"Reference","previous_headings":"","what":"matreex — matreex","title":"matreex — matreex","text":"package developped LESSEM internal users . allow run simulation IPM NFI datasets.","code":""},{"path":"/reference/matreex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"matreex — matreex","text":"Fill package description !","code":""},{"path":"/reference/new_fit_sgr.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for fit_sgr class — new_fit_sgr","title":"Constructor for fit_sgr class — new_fit_sgr","text":"used matreex package","code":""},{"path":"/reference/new_fit_sgr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for fit_sgr class — new_fit_sgr","text":"","code":"new_fit_sgr(   sv_params,   sv_family,   gr_params,   gr_sigma,   rec_params,   species,   max_dbh,   delay )"},{"path":"/reference/new_fit_sgr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for fit_sgr class — new_fit_sgr","text":"sv_params Named vector survival parameters fitted species climatic condition. Minimal parameters intercept size. sv_family Family list contain details models used fitting functions glm. inverse link function (linkinv) used model now. list. gr_params Named vector growth parameters fitted species climatic condition. Minimal parameters intercept size. gr_sigma Standard deviation residuals growth fitted model. rec_params Named vector growth parameters fitted species climatic condition. Minimal parameters intercept, BATOTSP BATOTNonSP. species Name species run simulation . Single char. max_dbh Maximum diameter fitted dataset. Single dbl. delay Delay species. Single dbl.","code":""},{"path":"/reference/new_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for forest class — new_forest","title":"Constructor for forest class — new_forest","text":"used matreex package","code":""},{"path":"/reference/new_forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for forest class — new_forest","text":"","code":"new_forest(   species = list(),   harv_rules = c(Pmax = 0.25, dBAmin = 3, freq = 1, alpha = 1) )"},{"path":"/reference/new_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for forest class — new_forest","text":"species List species created matreex package. harv_rules Vector harvest rules scale forest. Pmax maximum proportion BAcut / BA dBAmin minimum BA perform cut freq Frequence harvest executed.","code":""},{"path":"/reference/new_mu_gr.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor of mu_gr class — new_mu_gr","title":"Constructor of mu_gr class — new_mu_gr","text":"Constructor mu_gr class","code":""},{"path":"/reference/new_mu_gr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor of mu_gr class — new_mu_gr","text":"","code":"new_mu_gr(   mu_gr,   BA,   mesh,   mu_tab,   mu_step,   fit,   species,   correction,   surv = TRUE,   int )"},{"path":"/reference/new_mu_gr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor of mu_gr class — new_mu_gr","text":"mu_gr Matrix computed mesh values along mu gradient. BA values BA used get range mu species. num. mesh vector mesh variables. m number bins, L minimum size U maximum size. h defined function \\(h <- (U - L) / m\\). mu_tab Mu values values computed. row mu_gr matrix given mu. fit fit_sgr model survival growth recruitment given species. species Name species run simulation . Single char. correction IPM correction wanted species. Single char. int Integration information levels dimension integration.","code":""},{"path":"/reference/new_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for species class — new_species","title":"Constructor for species class — new_species","text":"used matreex package","code":""},{"path":"/reference/new_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for species class — new_species","text":"","code":"new_species(   IPM,   init_pop,   harvest_fun,   disturb_fun,   harv_lim = c(dth = 175, dha = 575, hmax = 1),   rdi_coef = NULL,   disturb_coef = NULL )"},{"path":"/reference/new_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for species class — new_species","text":"IPM ipm class object matreex package. init_pop Function initiate population simulation start. Arguments must mesh SurfEch. Using arguments mandatory, useful creating random population. harvest_fun Function impact population harvest rule. Argument must x, species,  ..., disturb_fun Function impact population possibles disturbances. Extra care needed give function needed parameters. Default def_disturb. harv_lim Limits harvest population size distribution. dth minimum diameter cut size distribution dha harvest diameter hmax maximum harvest rate size class rdi_coef Coefficient RDI curve used even harvest. model require intercept slope. disturb_coef Species coefficient  disturbance reaction. values names highly dependent disturbance function. BAtarget, ct t. return population state take input, less population . Unless want zombie trees. represent distribution population harvest","code":""},{"path":"/reference/old_fit2fit.html","id":null,"dir":"Reference","previous_headings":"","what":"load old fitted models — old_fit2fit","title":"load old fitted models — old_fit2fit","text":"load old fitted models","code":""},{"path":"/reference/old_fit2fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load old fitted models — old_fit2fit","text":"","code":"old_fit2fit(species, path = here(), replicat = 42, mean = FALSE)"},{"path":"/reference/old_fit2fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"load old fitted models — old_fit2fit","text":"species Name species run simulation . Single char. path Place save resulting file. Single Char. replicat Numeric simulation select. default, 42th. mean return element mean models single value. FALSE default, TRUE ignore replicat argument","code":""},{"path":"/reference/old_ipm2forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Dev function to read old ipm — old_ipm2forest","title":"Dev function to read old ipm — old_ipm2forest","text":"Read old ipm put new class format.","code":""},{"path":"/reference/old_ipm2forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dev function to read old ipm — old_ipm2forest","text":"","code":"old_ipm2forest(sp_name, climatic = 1, path = here(), replicat = 42)"},{"path":"/reference/old_ipm2forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dev function to read old ipm — old_ipm2forest","text":"sp_name Name species add single forest object. char. climatic Vector climatic situations run . IPM must exist one else climatic value skipped. int. path Place save resulting file. Single Char. replicat Numeric simulation select. default, 42th.","code":""},{"path":"/reference/old_ipm2species.html","id":null,"dir":"Reference","previous_headings":"","what":"Dev function to read old ipm — old_ipm2species","title":"Dev function to read old ipm — old_ipm2species","text":"Read old ipm put new species class format.","code":""},{"path":"/reference/old_ipm2species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dev function to read old ipm — old_ipm2species","text":"","code":"old_ipm2species(   species,   climatic = 1,   path = here(),   replicat = 42,   harvest = def_harv,   disturb = def_disturb,   init_pop = def_init,   delay = 0 )"},{"path":"/reference/old_ipm2species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dev function to read old ipm — old_ipm2species","text":"species Name species load. Single char. climatic Numeric coded old climatic state. int. path Place load previous IPM file. Single Char. replicat Numeric model select. default, 42th. harvest Function impact population harvest rule. Argument must pop. return population state take input, less population . Unless want zombie trees. disturb Function impact population possibles disturbances. Extra care needed give function needed parameters/ Default def_disturb. init_pop Function initiate population simulation start. Arguments must mesh SurfEch. Using arguments mandatory, usefull creating random population. delay Number year delay recruitment individual inclusion IPM. enlarge IPM add sub diagonal values 1. See delay.","code":""},{"path":"/reference/rdi_coef.html","id":null,"dir":"Reference","previous_headings":"","what":"Species Rdi intercept and slope. — rdi_coef","title":"Species Rdi intercept and slope. — rdi_coef","text":"Species Rdi intercept slope.","code":""},{"path":"/reference/rdi_coef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species Rdi intercept and slope. — rdi_coef","text":"","code":"rdi_coef"},{"path":"/reference/rdi_coef.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Species Rdi intercept and slope. — rdi_coef","text":"object class data.frame 28 rows 3 columns.","code":""},{"path":"/reference/rdi_coef.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Species Rdi intercept and slope. — rdi_coef","text":"https://10.12688/openreseurope.13671.2","code":""},{"path":"/reference/sim_deter_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Deterministic Tree population simulation — sim_deter_forest","title":"Deterministic Tree population simulation — sim_deter_forest","text":"Simulate population size state \\([1, t_{lim}]\\) times. state time \\(t+1\\) dependent state time \\(t\\) projection matrix (IPM). simulation run \\(t_{lim}\\) equilibrium reached, continue. simulation \\([1, t_{lim}]\\), equilibrium state returned.","code":""},{"path":"/reference/sim_deter_forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deterministic Tree population simulation — sim_deter_forest","text":"","code":"sim_deter_forest(   Forest,   tlim = 3000,   equil_dist = 250,   equil_diff = 1,   equil_time = 10000,   harvest = c(\"default\", \"Uneven\", \"Even\"),   targetBA = 20,   targetRDI = 0.9,   targetKg = 0.9,   final_harv = 100,   climate = NULL,   disturbance = NULL,   correction = \"none\",   SurfEch = 0.03,   verbose = FALSE )"},{"path":"/reference/sim_deter_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deterministic Tree population simulation — sim_deter_forest","text":"Forest Group species contains IPM deterministic transition \\(Z_{t}\\) state population \\(Z_{t+1}\\) state. species also defined recruitment harvest functions, please see species information. tlim Number simulation iterations (years) future. single int. equil_dist Number last n time range difference exceed equil_diff equilibrium research. single int. equil_diff Difference threshold basal area equilibrium assumed. single real. equil_time Total maximum time simulation allowed equilibrium research. Must higher equal tlim equil_dist. single int. harvest Choice harvest rules default, Uneven Even. indicate settings used. See Details. targetBA BA value per ha targeted using uneven harvesting. Single numeric \\(m^2\\). targetRDI RDI value targeted using even harvesting. RDI ratio number trees maximum number trees given self-thinning boundary corresponding mean diameter species. targetKg Kg value targeted using even harvesting. Kg ratio mean quadratic diameter killed trees mean quadratic diameter trees harvesting. final_harv Final harvest time used harvest set \"Even\". parameter drives final cut time even stands. climate Optional, climate matrix climate variation along time needed. Climate variation rely species created mu_gr class objects. matrix require many rows time steps equil_time. climate variate, single row can given reused. disturbance parameter. correction Choice correction IPM \"none\" (default) \"cut\". second option set last column 0 IPM individual can grow outside defines classes. SurfEch Value plot size surface ha verbose Print message. FALSE default","code":""},{"path":"/reference/sim_deter_forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deterministic Tree population simulation — sim_deter_forest","text":"Data.frame long tidyverse format : row observation column per variable. Columns listed , may contains NA values, example species non-specific variable (BA). species Name species. var Variable interest time Time step simulation. equilibrium last time tlim input, time occur twice table. mesh Mesh class number, 1 n class. size Size corresponding mesh class. equil Logical time step equilibrium last step simulation value Numeric values variables. variables : n Distribution density mesh along time per ha. N Sum density per ha. (colSums n) BAsp Basal area population per ha species BAstand Basal area population per ha species excluding size class dth. See Harvesting vignette. h Distribution harvest density mesh along time per ha. H Sum harvested density per ha. (colSums h)","code":""},{"path":"/reference/sim_deter_forest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deterministic Tree population simulation — sim_deter_forest","text":"iteration, basal area evaluated select corresponding IPM matrix. Basic simulations input illustrated main vignette. harvesting scenario theory explained harvesting vignette.","code":""},{"path":"/reference/sp_name.html","id":null,"dir":"Reference","previous_headings":"","what":"List the species in matreex class object — sp_name","title":"List the species in matreex class object — sp_name","text":"List species matreex class object","code":""},{"path":"/reference/sp_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the species in matreex class object — sp_name","text":"","code":"sp_name(x)"},{"path":"/reference/sp_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List the species in matreex class object — sp_name","text":"x matreex class object. Used ipm species time.","code":""},{"path":"/reference/sp_rec.html","id":null,"dir":"Reference","previous_headings":"","what":"sp recruit — sp_rec","title":"sp recruit — sp_rec","text":"Get species recruitment function","code":""},{"path":"/reference/sp_rec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sp recruit — sp_rec","text":"","code":"sp_rec(x, climatic)"},{"path":"/reference/sp_rec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sp recruit — sp_rec","text":"x Species get recruitment function climatic Climate vector needed mu_gr object build corresponding recruitment function.","code":""},{"path":"/reference/species.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new species for simulation — species","title":"Create a new species for simulation — species","text":"Species defined IPM transition matrix size t t+1, recruitment harvest functions (see Details). species items defined given climate. additionnal vector harvest parameters required minimal size harvest (dth), size wich harvest constant (dha).","code":""},{"path":"/reference/species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new species for simulation — species","text":"","code":"species(   IPM,   init_pop = def_init,   harvest_fun = def_harv,   disturb_fun = def_disturb,   harv_lim = c(dth = 175, dha = 575, hmax = 1),   rdi_coef = NULL,   disturb_coef = NULL )"},{"path":"/reference/species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new species for simulation — species","text":"IPM ipm class object matreex package. init_pop Function initiate population simulation start. Arguments must mesh SurfEch. Using arguments mandatory, useful creating random population. harvest_fun Function impact population harvest rule. Argument must x, species,  ..., disturb_fun Function impact population possibles disturbances. Extra care needed give function needed parameters. Default def_disturb. harv_lim Limits harvest population size distribution. dth minimum diameter cut size distribution dha harvest diameter hmax maximum harvest rate size class rdi_coef Coefficient RDI curve used even harvest. model require intercept slope. disturb_coef Species coefficient  disturbance reaction. values names highly dependent disturbance function. BAtarget, ct t. return population state take input, less population . Unless want zombie trees. represent distribution population harvest","code":""},{"path":"/reference/species.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a new species for simulation — species","text":"species defined IPM integrated prediction matrix growth survival functions species. Since species functions defined, accessible editable. init_pop Function initiate new population. Default def_init. recruit_fun Function give distribution recruits. default defined models associated IPM (x$IPM$rec) possible replace . example can nullify recruitment simulate extinction. harvest_fun Function give harvest density distribution harvest event occurs (frequence set forest scale.). default function def_harv constant harvest rate 0.6 percent. functions Uneven_harv Even_harv.","code":""},{"path":[]},{"path":"/reference/summary.ipm.html","id":null,"dir":"Reference","previous_headings":"","what":"IPM summary — summary.ipm","title":"IPM summary — summary.ipm","text":"Additionnal argument : fline skip first line. FALSE default.","code":""},{"path":"/reference/summary.ipm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IPM summary — summary.ipm","text":"","code":"# S3 method for ipm summary(object, ...)"},{"path":"/reference/summary.ipm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IPM summary — summary.ipm","text":"object Ipm object. ... Dots dots.","code":""},{"path":"/reference/summary.mu_gr.html","id":null,"dir":"Reference","previous_headings":"","what":"mu_gr summary — summary.mu_gr","title":"mu_gr summary — summary.mu_gr","text":"function written yet.","code":""},{"path":"/reference/summary.mu_gr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mu_gr summary — summary.mu_gr","text":"","code":"# S3 method for mu_gr summary(object, ...)"},{"path":"/reference/summary.mu_gr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mu_gr summary — summary.mu_gr","text":"object Ipm object. ... Dots dots.","code":""},{"path":"/reference/summary.species.html","id":null,"dir":"Reference","previous_headings":"","what":"species summary — summary.species","title":"species summary — summary.species","text":"Additionnal argument : sum_ipm Print IPM summary. TRUE default.","code":""},{"path":"/reference/summary.species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"species summary — summary.species","text":"","code":"# S3 method for species summary(object, ...)"},{"path":"/reference/summary.species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"species summary — summary.species","text":"object Ipm object. ... Dots dots.","code":""},{"path":"/reference/tree_format.html","id":null,"dir":"Reference","previous_headings":"","what":"tree_format generic — tree_format","title":"tree_format generic — tree_format","text":"Format simulation output sim_deter_forest function tidyverse format (long format) ggplot2 filtering.","code":""},{"path":"/reference/tree_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tree_format generic — tree_format","text":"","code":"tree_format(x)  # S3 method for default tree_format(x)  # S3 method for deter_sim tree_format(x)"},{"path":"/reference/tree_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tree_format generic — tree_format","text":"x Simulations created sim_deter_forest","code":""},{"path":[]},{"path":[]},{"path":"/news/index.html","id":"news-0-3-0","dir":"Changelog","previous_headings":"","what":"News","title":"matreex 0.3.0","text":"Disturbance now fully implemented happens harvesting. occurance disturbance cancel harvesting size distribution disturbed trees saved harvest distribution output. Added BAstand output model","code":""},{"path":"/news/index.html","id":"breaking-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"matreex 0.3.0","text":"def_init_k() require distribution size per hectare don’t need multiply distribution SurfEch value anymore. See #6 sim_deter_forest() output table changed name variable m_i (distribution density mesh ) n_i. #8. delay now accept negative values, remove delay object. IPM build make_IPM() now use default delay set species (see #10). Previous simulation used delay = 0. Default parameter correction make_IPM() make_mu_gr() now \"none\". Previous one \"constant\". #11","code":""},{"path":"/news/index.html","id":"documentation-0-3-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"matreex 0.3.0","text":"Add pkgdown usage document package www. Correction vignettes New warning equil_diff value low sim_deter_forest().","code":""},{"path":"/news/index.html","id":"datasets-0-3-0","dir":"Changelog","previous_headings":"","what":"Datasets","title":"matreex 0.3.0","text":"Default delay set species (see #10)","code":""},{"path":[]},{"path":"/news/index.html","id":"breaking-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"matreex 0.2.0","text":"tree_format() get deprecated fully integrated sim_deter_forest().","code":""},{"path":"/news/index.html","id":"documentation-0-2-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"matreex 0.2.0","text":"New functions summary() ipm species class. New vignette Harvesting.Rmd. New vignette matreex.Rmd.","code":""},{"path":"/news/index.html","id":"user-interface-0-2-0","dir":"Changelog","previous_headings":"","what":"User interface","title":"matreex 0.2.0","text":"make_IPM() flexible climate input simplify scripts. Single rows matrix data.frame now accepted. replace climate <- drop(.matrix(subset(climate_species, ...). species() class constructor now default values preferred new_species().","code":""},{"path":"/news/index.html","id":"matreex-010","dir":"Changelog","previous_headings":"","what":"matreex 0.1.0","title":"matreex 0.1.0","text":"Added NEWS.md file track changes package. Changed package name {matreex}. Add disturbance model Julien. Class ipm modified invalidate previous script output (saved .Rds/.Rdata). Idea Arnaud precompute mu values speed -simulation integration modify climate. kind simulations takes longer flexible. New class mu_gr. Refactorisation harvest process Uneven Even process. Uneven works multi species. Refactorisation integration process gain time allow general function (added input choices). Multi species simulations works 1 n species general setup. Also created generic output format usable tidyverse. Add functions load old IPMs modify new class (ipm, species , forest). Packaging functions Kunstler et al (2020) initial name {treeforce}.","code":""}]
